//basic
@mixin shadow($color, $intensity) {
  box-shadow: .15rem .15rem .25rem 0 rgba($color, $intensity);
}

//clamp
@mixin clamp($property, $axis, $min, $max) {
  @if $axis == 'x' {
    #{$property}: 0 unquote("clamp(#{$min} * 1rem, calc(#{$min} * 1rem + (#{$max} - #{$min}) * #{$calcWidth}), #{$max} * 1rem)");
  } @else if $axis == 'y' {
    #{$property}: unquote("clamp(#{$min} * 1rem, calc(#{$min} * 1rem + (#{$max} - #{$min}) * #{$calcWidth}), #{$max} * 1rem)") 0;
  } @else {
    #{$property}: unquote("clamp(#{$min} * 1rem, calc(#{$min} * 1rem + (#{$max} - #{$min}) * #{$calcWidth}), #{$max} * 1rem)");
  }
}

//flex
@mixin flex($direction, $justify, $align) {
  display: flex;
  @if $direction {
    flex-direction: $direction;
  } @else if $justify {
    justify-content: $justify;
  } @else if $align {
    align-items: $align;
  }
}

//mediaQueries
@mixin media-queries($size) {
  @if $size == xs {
    @media (max-width: 599px) { @content; }
  } @else if $size == sm {
    @media (min-width: 600px) { @content; }
  } @else if $size == md {
    @media (min-width: $wrapS) { @content; }
  } @else if $size == lg {
    @media (min-width: $wrapM) { @content; }
  } @else if $size == xl {
    @media (min-width: $wrapL) { @content; }
  }
}

//generate
@mixin generate($prefix, $property) {
  $sizes: [0, .25, .5, 1, 1.5, 3];
  $spacing: 1rem;

  @for $i from 1 through length($sizes) {
    $size: nth($sizes, $i);

    .#{$prefix}-#{$i - 1} {
      #{$property}: $spacing * $size;
    }
  }
}

@mixin generateAxis($prefix, $property) {
  $sizes: [0, .25, .5, 1, 1.5, 3];
  $spacing: 1rem;

  @for $i from 1 through length($sizes) {
    $size: nth($sizes, $i);

    .#{$prefix}l-#{$i - 1} {
      #{$property}-left: $spacing * $size;
    }
    .#{$prefix}t-#{$i - 1} {
      #{$property}-top: $spacing * $size;
    }
    .#{$prefix}r-#{$i - 1} {
      #{$property}-right: $spacing * $size;
    }
    .#{$prefix}b-#{$i - 1} {
      #{$property}-bottom: $spacing * $size;
    }
    .#{$prefix}x-#{$i - 1} {
      #{$property}: 0 $spacing * $size;
    }
    .#{$prefix}y-#{$i - 1} {
      #{$property}: $spacing * $size 0;
    }
  }
}
